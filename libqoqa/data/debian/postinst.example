#!/bin/bash

cd /opt/venvs/$projectname

# Move application to top level project directory
if [ -d "$projectname" ]
then
    cp -r lib/python3.5/site-packages/$projectname/** $projectname/
    rm -rf lib/python3.5/site-packages/$projectname
else
    mv lib/python3.5/site-packages/$projectname .
fi
chmod +x $projectname/manage.py

#Rename .cfg so that django/settings.py can read it
if [ ! -f $projectname/$projectname.cfg ]
then
    mv $projectname/production.cfg $projectname/$projectname.cfg
else
    rm $projectname/production.cfg
    
fi

#Cleanup
rm $projectname/__init__.py
rm -rf $projectname/__pycache__/


# Create logs directory
if [ ! -d "$projectname/logs" ]
then
    mkdir /opt/venvs/$projectname/logs

fi


# Activate Virtualenv
source /opt/venvs/$projectname/bin/activate

# Run django collectstatic
cd /opt/venvs/$projectname/$projectname
./manage.py collectstatic --noinput
./manage.py migrate --noinput

# Leave Virtualenv
deactivate


# Create user webapp and change project permissions to webapp user
adduser --disabled-password --gecos "" webapp
chown -R webapp:webapp /opt/venvs/$projectname


exit 0
