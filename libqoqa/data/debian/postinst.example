#!/bin/bash

cd /opt/venvs/$projectname

# Move application to top level project directory
if [ -d "$projectname" ]
then
    cp -r lib/python3.6/site-packages/$projectname/** $projectname/
    rm -rf lib/python3.6/site-packages/$projectname
else
    mv lib/python3.6/site-packages/$projectname .
fi

# manage.py must be executable
chmod +x $projectname/manage.py


#move start_gunicorn to env/bin directory and make execuatble
mv $projectname/start_gunicorn bin/
chmod +x bin/start_gunicorn

#Cleanup
rm $projectname/__init__.py
rm -rf $projectname/__pycache__/


# Create logs directory
if [ ! -d "$projectname/logs" ]
then
    mkdir /opt/venvs/$projectname/logs

fi


# Create user webapp and change project permissions to webapp user
adduser --disabled-password --gecos "" webapp
chown -R webapp:webapp /opt/venvs/$projectname


#Check if systemd service for $projectname is running
if systemctl is-active -q $projectname
then
    echo "$projectname is running...stopping"
    systemctl stop $projectname
fi



# I dont think qoqa should be responsible for ssl
# RUN_CERTBOT=false
# DOMAIN=$projectname
# if [ $RUN_CERTBOT = true ];
# then
#     echo "[qoqq] Checking if certbot is installed"
#     if type certbot &>/dev/null
#     then
# 	echo "[qoqa] Certbot starting......."
# 	echo "[qoqa] checking if domain certificate already exists"
# 	if certbot certificates | grep $DOMAIN | grep -v grep &>/dev/null
# 	then
# 	    echo "[qoqa] Domin certificate exists, nothin to do"
# 	else
# 	    echo "[qoqa] Certificate for domain does not exists"
# 	    echo "[qoqa] Creating new certificate for $DOMAIN"
# 	    certbot certonly --standalone -d $projectname
# 	fi
#     else
# 	echo "[qoqa] Certbot not installed yet....please install"
#     fi
    
# fi


#Restart systemd service for $projectname
systemctl start $projectname


exit 0
